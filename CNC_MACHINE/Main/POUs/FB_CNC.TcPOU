<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_CNC" Id="{aa8e508b-b3d9-4f69-bd41-818be025bca8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CNC
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
    
	X_Motion		: FB_MotionFunctions;
	X2_Motion 		: FB_MotionFunctions;
	Y_Motion		: FB_MotionFunctions;
	Z_Motion		: FB_MotionFunctions;
    
    eHomeXSeq       : E_HomeX;
	
	
	X_MC_IN			: ST_Motion_Inputs;
	X2_MC_IN		: ST_Motion_Inputs;
	Y_MC_IN			: ST_Motion_Inputs;
	Z_MC_IN			: ST_Motion_Inputs;
	
	X_MC_OUT		: ST_Motion_Outputs;
	X2_MC_OUT		: ST_Motion_Outputs;
	Y_MC_OUT		: ST_Motion_Outputs;
	Z_MC_OUT		: ST_Motion_Outputs;
	
	
	X_Ref	        : AXIS_REF;
	X2_Ref	        : AXIS_REF;
	Y_Ref	        : AXIS_REF;
	Z_Ref	        : AXIS_REF;
	
	
	i_bXHomingSwitch		AT %I* : BOOL;
	i_bX2HomingSwitch		AT %I* : BOOL;
    i_bXLimitSwitch			AT %I* : BOOL;
	i_bYHomingSwitch		AT %I* : BOOL;
    i_bYLimitSwitch			AT %I* : BOOL;
	i_bZHomingSwitch		AT %I* : BOOL;
    in_stItpToPlc	AT %I*:	NcToPlc_NciChannel_Ref;
	out_stPlcToItp	AT %Q*:	PLCTONC_NCICHANNEL_REF;
    
    
	
	bXHomingSwitch		: BOOL;
	bX2HomingSwitch		: BOOL;
	bYHomingSwitch		: BOOL;
	bZHomingSwitch		: BOOL;
    bXLimitSwitch		: BOOL;
	bYLimitSwitch		: BOOL;
	
	
	bHomeX		    : BOOL;
	bHomeX2		    : BOOL;
	bHomeY		    : BOOL;
	bHomeZ		    : BOOL;
    bGearInTrigger  : BOOL;
    rGearInTrigger  : R_TRIG;
    rtrigAxisNotGeared  : R_TRIG;
	bAllAxesReady	: BOOL;

	
// Program Call Variables	
	
	nHomeAllSeq	: INT;
	nHomeXSeq	: INT;
	nHomeYSeq	: INT;
	nHomeZSeq	: INT;
	
	ProgramCall	: E_Programs;
    sCurrentProgram : STRING;
    
    fbSimpleNciSequence:	FB_SimpleNciSequence;
	bExecuteNCI:	BOOL	:= FALSE;
    fUserOverride:	LREAL	:= 100.0;
	

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Trigger Axis Gearing

rtrigAxisNotGeared(CLK := X_MC_OUT.bPowerStatus AND NOT X_MC_OUT.bGearInDone);

rGearInTrigger(CLK:= bGearInTrigger);
bGearInExecute:= rGearInTrigger.Q;

IF rtrigAxisNotGeared.Q THEN
    
    bGearInTrigger := TRUE;
    
ELSE 
    
    bGearInTrigger := FALSE;

END_IF


// Motion Calls

X_Motion( 
			Ref:= X_Ref,
            bGearingEnabled := TRUE,
            SlaveRef:= X2_Ref,
		  	Motion_In := X_MC_IN,
		  	Motion_Out => X_MC_OUT,
			bHomingInput := bXHomingSwitch,
			bPositiveLimitSwitch := bXLimitSwitch,
			bHomeExecute := bHomeX,
										);
                                        

							
X2_Motion( 
			Ref:= X2_Ref,
            bGearingEnabled := FALSE,
            SlaveRef:= X2_Ref,
		  	Motion_In := X2_MC_IN,
		  	Motion_Out => X2_MC_OUT,
			bHomingInput := bX2HomingSwitch,
			bPositiveLimitSwitch := bXLimitSwitch,
			bHomeExecute := bHomeX2
										);
						
Y_Motion( 
			Ref:= Y_Ref,
            bGearingEnabled := FALSE,
            SlaveRef:= Y_Ref,
		  	Motion_In := Y_MC_IN,
		  	Motion_Out => Y_MC_OUT,
			bHomingInput := bYHomingSwitch,
			bPositiveLimitSwitch := bYLimitSwitch,
			bHomeExecute := bHomeY
										);
							
Z_Motion( 
			Ref:= Z_Ref,
            bGearingEnabled := FALSE,
            SlaveRef:= Z_Ref,
		  	Motion_In := Z_MC_IN,
		  	Motion_Out => Z_MC_OUT ,
			bHomingInput := bZHomingSwitch,
			bHomeExecute := bHomeZ
										);
                                        
fbSimpleNciSequence(
	        bExecute:= bExecuteNCI, 
	        bBusy=> , 
	        bError=> , 
	        bDone=> , 
	        stX:=X_Ref, 
	        stY:=Y_Ref, 
	        stZ:=Z_Ref, 
	        stItpToPlc:=in_stItpToPlc , 
	        stPlcToItp:= out_stPlcToItp,
            sLoadedProgram=>sCurrentProgram);
            
ItpSetOverridePercent(fOverridePercent:=fUserOverride , sPlcToNci:=out_stPlcToItp);

// All Axes Ready Bit

bAllAxesReady:= X_MC_OUT.bPowerStatus AND X2_MC_OUT.bPowerStatus AND Y_MC_OUT.bPowerStatus AND Z_MC_OUT.bPowerStatus;

// Method Calls

M_ProgramLoader();
M_Inputs();
M_Outputs();]]></ST>
    </Implementation>
    <Method Name="M_Inputs" Id="{44930261-f7b3-46c2-ba50-0ddd8b114d05}">
      <Declaration><![CDATA[METHOD M_Inputs : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Homing Switch Inputs

bXHomingSwitch	:= i_bXHomingSwitch;	
bX2HomingSwitch	:= i_bX2HomingSwitch;	
bYHomingSwitch	:= i_bYHomingSwitch;	
bZHomingSwitch	:= i_bZHomingSwitch;

// Limit Switch Inputs

bXLimitSwitch	:= i_bXLimitSwitch;
bYLimitSwitch	:= i_bYLimitSwitch;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Outputs" Id="{bfb1dda8-5611-458d-bc52-800eff2f8798}">
      <Declaration><![CDATA[METHOD M_Outputs : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PRG_HomeAll" Id="{dab3d8ef-3b5b-4130-bf86-a872d94b2fd9}">
      <Declaration><![CDATA[METHOD M_PRG_HomeAll : BOOL
VAR_INPUT
END_VAR

VAR

END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
// Execute homing on all axes simultaneously
// If there is an error during any Axis homing, continue with all other axes but return and error message of some sort i.e "X axis failed to Home" or something similar

CASE nHomeAllSeq OF
		 		
0:
    M_PRG_HomeX();
    M_PRG_HomeY();
    M_PRG_HomeZ();
        
    IF X_MC_OUT.bAxisHomed AND X2_MC_OUT.bAxisHomed AND Y_MC_OUT.bAxisHomed AND Z_MC_OUT.bAxisHomed THEN
        bProgramDone:=TRUE;
	END_IF
	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PRG_HomeX" Id="{1d12177f-1165-4fe4-893e-75362f34ca0e}">
      <Declaration><![CDATA[METHOD M_PRG_HomeX : BOOL
VAR_INPUT
END_VAR

VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[


CASE eHomeXSeq OF
		 		

Init:

		bProgramDone := FALSE;
		bAxisEnable:=TRUE;
        bGearInExecute := TRUE;
		nHomeXSeq :=10;	
	
Power_On:

	    // Home Both Axes Together
		IF X_MC_OUT.bPowerStatus THEN
			
			bHomeX := TRUE;
			nHomeXSeq:=20;
		
		ELSE

			nHomeXSeq:=0;		
		
		END_IF
	
Check_Homed:

		IF X_MC_OUT.bAxisHomed THEN
			
			bHomeX:= FALSE;
			nHomeXSeq:=30;
		
		END_IF
        
Home_X1:
        // Decouple Axes for individual Homing
        
        //X1 Homing
        bGearInExecute := FALSE;
        bGearOutExecute:= TRUE;
        IF X_MC_OUT.bPowerStatus THEN
			bHomeX := TRUE;
			nHomeXSeq:=40;
        ELSE
            bAxisEnable:=TRUE;
            bAxisReset:=TRUE;
            nHomeXSeq:=30;
        END_IF
        
X1_Homed:
     
        IF X_MC_OUT.bAxisHomed THEN
			
			bHomeX:= FALSE;
			nHomeXSeq:=50;
		
		END_IF

Home_X2:
        // X2 Homing
       IF X2_MC_OUT.bPowerStatus THEN
			
			bHomeX2 := TRUE;
			nHomeXSeq:=60;
        ELSE
            bAxisEnable:=TRUE;
            bAxisReset:=TRUE;
            nHomeXSeq:=50;
        END_IF
        
X2_Homed:
      
        IF X2_MC_OUT.bAxisHomed THEN
			
			bHomeX:= FALSE;
			nHomeXSeq:=70;
		
		END_IF
        

Gear_In:
        bGearOutExecute:=FALSE;
        bGearInExecute:=TRUE;
        IF X_MC_OUT.bGearInDone AND X2_MC_OUT.bGearInDone THEN
            nHomeXSeq:=80;      
		END_IF
        
        
End_Sequence:
		
		bAxisEnable:=FALSE;
		nHomeXSeq:=0;
		bProgramDone := TRUE;
        
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PRG_HomeY" Id="{0559bf4f-f4eb-40eb-a1a9-aef1d5d76984}">
      <Declaration><![CDATA[METHOD M_PRG_HomeY : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[


CASE nHomeYSeq OF
		 		

	0:
		bProgramDone := FALSE;
		bAxisEnable:=TRUE;
		nHomeYSeq :=10;	
	
	10:
	
		IF Y_MC_OUT.bPowerStatus THEN
			
			bHomeY := TRUE;
			nHomeYSeq:=20;
		
		ELSE

			nHomeYSeq:=0;		
		
		END_IF
	
	20:
		IF Y_MC_OUT.bAxisHomed THEN
			
			bHomeY:= FALSE;
			nHomeYSeq:=30;
		
		END_IF
		
	30:
		
		bAxisEnable:=FALSE;
		nHomeYSeq:=0;
		bProgramDone := TRUE;




END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PRG_HomeZ" Id="{a0db440c-428a-4bcc-967b-6a14556f0e37}">
      <Declaration><![CDATA[METHOD M_PRG_HomeZ : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[


CASE nHomeZSeq OF
		 		

	0:
		bProgramDone := FALSE;
		bAxisEnable:=TRUE;
		nHomeZSeq :=10;	
	
	10:
	
		IF Z_MC_OUT.bPowerStatus THEN
			
			bHomeZ := TRUE;
			nHomeZSeq:=20;
		
		ELSE

			nHomeZSeq:=0;		
		
		END_IF
	
	20:
		IF Z_MC_OUT.bAxisHomed THEN
			
			bHomeZ:= FALSE;
			nHomeZSeq:=30;
		
		END_IF
		
	30:
		
		bAxisEnable:=FALSE;
		nHomeZSeq:=0;
		bProgramDone := TRUE;




END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PRG_Null" Id="{95052e96-06a1-4162-a970-9a7ef220b3e3}">
      <Declaration><![CDATA[METHOD M_PRG_Null : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[nHomeAllSeq:=0;
nHomeXSeq:=0;
nHomeYSeq:=0;
nHomeZSeq:=0;
bProgramDone:= FALSE;
bHomeY:=FALSE;
bHomeX:=FALSE;
bHomeX2:=FALSE;
bHomeZ:=FALSE;
//bAxisEnable:= FALSE;

/////////////////////////////////]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_ProgramLoader" Id="{89f9fb87-c1f3-4063-b9ac-059ba224bd26}">
      <Declaration><![CDATA[METHOD M_ProgramLoader : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF bProgramDone THEN
	
	ProgramCall := eNull;

END_IF


CASE ProgramCall OF	
	
	eNull:
	
		M_PRG_Null();

	eHomeAll:
	
		bProgramDone:=FALSE;
		M_PRG_HomeAll();
	
	eHomeX:
	
		bProgramDone:=FALSE;
		M_PRG_HomeX();
	
	eHomeY:
	
		bProgramDone:=FALSE;
		M_PRG_HomeY();	
	
	eHomeZ:
	
		bProgramDone:=FALSE;
		M_PRG_HomeZ();

END_CASE

]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CNC">
      <LineId Id="1741" Count="86" />
      <LineId Id="680" Count="0" />
    </LineIds>
    <LineIds Name="FB_CNC.M_Inputs">
      <LineId Id="9" Count="1" />
      <LineId Id="5" Count="3" />
      <LineId Id="12" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="FB_CNC.M_Outputs">
      <LineId Id="15" Count="0" />
    </LineIds>
    <LineIds Name="FB_CNC.M_PRG_HomeAll">
      <LineId Id="61" Count="1" />
      <LineId Id="122" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="116" Count="5" />
      <LineId Id="11" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_CNC.M_PRG_HomeX">
      <LineId Id="6" Count="6" />
      <LineId Id="137" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="15" Count="2" />
      <LineId Id="138" Count="0" />
      <LineId Id="18" Count="1" />
      <LineId Id="45" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="139" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="71" Count="2" />
      <LineId Id="110" Count="1" />
      <LineId Id="74" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="86" Count="1" />
      <LineId Id="101" Count="2" />
      <LineId Id="105" Count="4" />
      <LineId Id="104" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="93" Count="7" />
      <LineId Id="92" Count="0" />
      <LineId Id="112" Count="1" />
      <LineId Id="121" Count="0" />
      <LineId Id="116" Count="4" />
      <LineId Id="114" Count="1" />
      <LineId Id="122" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="125" Count="2" />
      <LineId Id="131" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="123" Count="1" />
      <LineId Id="81" Count="3" />
      <LineId Id="44" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CNC.M_PRG_HomeY">
      <LineId Id="6" Count="5" />
      <LineId Id="45" Count="29" />
      <LineId Id="40" Count="4" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CNC.M_PRG_HomeZ">
      <LineId Id="6" Count="5" />
      <LineId Id="45" Count="29" />
      <LineId Id="40" Count="4" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CNC.M_PRG_Null">
      <LineId Id="5" Count="2" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="24" Count="3" />
      <LineId Id="15" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="FB_CNC.M_ProgramLoader">
      <LineId Id="242" Count="0" />
      <LineId Id="200" Count="4" />
      <LineId Id="240" Count="0" />
      <LineId Id="205" Count="28" />
      <LineId Id="48" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>