<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_SpindleFunctions" Id="{d33eb993-f1a5-484e-9d4d-ae7861108719}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SpindleFunctions

// Spindle VFD control for Invertek Optidrive E3 (240V single phase input, 240V three phase output, 2.2KW) and GMT 400hz 2.2kw 3 HP Spindle using Modbus RTU

VAR_INPUT
	

END_VAR
VAR_OUTPUT
END_VAR
VAR
    
 fbModbusMaster       : ModbusRtuMasterV2_PcCOM;
 nModbusID            : BYTE    :=1;
 nModbusReadQty       : WORD :=24;
 nModbusReadAddr      : WORD;
 nModbusRead        : ARRAY [1..24] OF INT;
 bReadExecute       : BOOL;
 bDiagExecute       : BOOL;
 eErrorID           : MODBUS_ERRORS;
 nCbRead            : UINT;
 bReadBusy          : BOOL;
 bReadError         : BOOL;

 bBusy              : BOOL;
 bError             : BOOL;
 nBytesRead         : UINT;
 
 bWriteExecute      : BOOL;
 nModbusWrite       : WORD;
 eError             : MODBUS_ERRORS;
 //Input Array
 nVFDInputs AT%IW0  : ARRAY[0..255] OF WORD;
 //Output Array
 nVFDOutputs AT%QW0 : ARRAY[0..255] OF WORD;

(* bWriteBusy     : BOOL;
 bWriteError    : BOOL; *)

 //eWriteError    : MODBUS_ERRORS;
 
 stSpindleStatus	: ST_SpindleStatus;
 stSpindleControl   : ST_SpindleControl;
	
// Drive Control Command

bStop				: BOOL;
bRunEnable			: BOOL;
bDecelRamp1			: BOOL;
bDecelRamp2			: BOOL;
bFaultReset			: BOOL;
bCoastStopRequest	: BOOL;

// SpeedRef
rSpeedRefSetpoint	: REAL;
//Accel/Decel Time
rAccel_Decel		: REAL;

// Spindle Status

nErrorCode              : BYTE;
bDriveStopped           : BOOL;
bDriveRunning           : BOOL;
bDriveTripped           : BOOL;
rOutputFrequency        : REAL;
rOutputCurrent			: REAL;
nDigitalInputSts		: WORD;
nAnalogInput1			: WORD;
nAnalogInput2			: WORD;
rSpeedRefValue			: REAL;
rDCBusVoltage			: REAL;
rDriveTemp				: REAL;


// Serial COM Port Status/Control Bit Mapping:

(*
Status Bit 0: TA: Transmit Accepted
Bit 1: RR: Receive Request
Bit 2: IA: Init Accepted
Bit 3: BUF_F: Buffer overflow (possible data loss)
Bits 4-12: nIn Number of data present in buffer
*)
(*Ctrl Bit 0: TR: Transmit Request
Bit 1: RA: Receive Accepted
Bit 2: IR: Init Request
Bit 3: Unused
Bits 4-12: nOut Number of data to be sent
*)
//Serial Status Bits
bTransmitAccepted       : BOOL;
bStatInitRequest        : BOOL;
nStatNumDataBuffer      : BYTE;
//Serial Control Bits
bReceiveAccepted        : BOOL;
bCtrlInitRequest        : BOOL;
nCtrlNumDataBuffer      : BYTE;

fbSerialLineControl     : SerialLineControl;
TxComBuffer             : ComBuffer;
RxComBuffer             : ComBuffer;

END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[M_SpindleControlMapping();
M_ModbusMapping();
M_ReadParameters();

fbModbusMaster.ReadRegs(  
                        UnitID:=nModbusID,
                        Quantity:=nModbusReadQty,
                        MBAddr:=nModbusReadAddr,   // Invertek Register Index
                        cbLength:= SIZEOF(nModbusRead), 
                        pMemoryAddr:= ADR(nModbusRead),
                        Execute:= bReadExecute,
                        Timeout:= T#3S,
                        Busy=> bReadBusy,
                        Error=> bReadError,
                        ErrorId=> eErrorID,
                        cbRead=> nCbRead
                                        );                                        
]]></ST>
    </Implementation>
    <Method Name="M_ModbusMapping" Id="{83d865f8-d7ae-49d7-a6f4-fcb7ec40a615}">
      <Declaration><![CDATA[METHOD M_ModbusMapping : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*

IF bReadExecute THEN

    stSpindleStatus.nControlWord	    := nModbusRead[1];
    stSpindleStatus.nSpeedRefSetpoint	:= nModbusRead[2];
    stSpindleStatus.nRampControlTime	:= nModbusRead[4];

ELSIF bWriteExecute THEN
    
    nModbusRead[1]                  := stSpindleControl.nControlWord;
    nModbusRead[2]                  := stSpindleControl.nSpeedRefSetpoint;
    nModbusRead[4]                  := stSpindleControl.nRampControlTime;

END_IF


stSpindleStatus.nErrorCode.0			:=  nModbusRead[6].0;
stSpindleStatus.nErrorCode.1			:=  nModbusRead[6].1;
stSpindleStatus.nErrorCode.2			:=  nModbusRead[6].2;
stSpindleStatus.nErrorCode.3			:=  nModbusRead[6].3;
stSpindleStatus.nErrorCode.4			:=  nModbusRead[6].4;
stSpindleStatus.nErrorCode.5			:=  nModbusRead[6].5;
stSpindleStatus.nErrorCode.6			:=  nModbusRead[6].6;
stSpindleStatus.nErrorCode.7			:=  nModbusRead[6].7;	       
                                                                           
stSpindleStatus.nDriveStatus.0		:= nModbusRead[6].8; 	           
stSpindleStatus.nDriveStatus.1		:= nModbusRead[6].9; 	           
stSpindleStatus.nDriveStatus.2		:= nModbusRead[6].10; 	           
stSpindleStatus.nDriveStatus.3		:= nModbusRead[6].11; 	           
stSpindleStatus.nDriveStatus.4		:= nModbusRead[6].12; 	           
stSpindleStatus.nDriveStatus.5		:= nModbusRead[6].13; 	           
stSpindleStatus.nDriveStatus.6		:= nModbusRead[6].14; 	           
stSpindleStatus.nDriveStatus.7		:= nModbusRead[6].15; 	           
                                                                           
stSpindleStatus.nOutputFreq			:= nModbusRead[7];                 
stSpindleStatus.nMotorCurrent		:= nModbusRead[8];	               
stSpindleStatus.nDigitalInputSts	:= nModbusRead[11];	                             
stSpindleStatus.nSpeedRefSetpoint	:= nModbusRead[22];
stSpindleStatus.nDCBusVoltage		:= nModbusRead[23];	
stSpindleStatus.nDrivePowerStageTemp:= nModbusRead[24];

*)]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_ReadParameters" Id="{a233cd63-eba1-4191-8645-5e9df383ad75}">
      <Declaration><![CDATA[METHOD M_ReadParameters : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
                                        
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_SerialLineControl" Id="{4775d0c6-34f6-4037-9ac7-88b5b4c316f9}">
      <Declaration><![CDATA[METHOD M_SerialLineControl : BOOL
VAR_INPUT
END_VAR

VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbSerialLineControl(
                    Mode:= SERIALLINEMODE_PC_COM_PORT, 
                    pComIn:= ADR(fbModbusMaster.InData), 
                    pComOut:= ADR(fbModbusMaster.OutData), 
                    SizeComIn:= 64, 
                    Error=> , 
                    ErrorID=> , 
                    TxBuffer:= TxComBuffer, 
                    RxBuffer:= RxComBuffer);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_SpindleControlMapping" Id="{2f07773b-6003-410f-852f-7cd237e180e1}">
      <Declaration><![CDATA[METHOD M_SpindleControlMapping : BOOL
VAR_INPUT

END_VAR

VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Read/Write Bits

// Stop/Run Enable

IF bStop THEN

	stSpindleControl.nControlWord.0 := FALSE;
	
ELSIF bRunEnable THEN
		
	stSpindleControl.nControlWord.0 := TRUE;

END_IF

// Decel Ramps

IF bDecelRamp1 THEN
	
	stSpindleControl.nControlWord.1 := FALSE;

ELSIF bDecelRamp2 THEN
	
	stSpindleControl.nControlWord.1 := TRUE;
	
END_IF;


stSpindleControl.nControlWord.2 := bFaultReset;
stSpindleControl.nControlWord.2 := bCoastStopRequest;

//stSpindleControl.nSpeedRefSetpoint  := rSpeedRefSetpoint;
//stSpindleControl.nRampControlTime   := rAccel_Decel;

// Read Only Bits

nErrorCode      := stSpindleStatus.nErrorCode;
bDriveStopped	:= stSpindleStatus.nDriveStatus.0;
bDriveRunning	:= stSpindleStatus.nDriveStatus.1;
bDriveTripped	:= stSpindleStatus.nDriveStatus.2;

rOutputFrequency	:= stSpindleStatus.nOutputFreq;
rOutputCurrent		:= stSpindleStatus.nMotorCurrent;
nDigitalInputSts	:= stSpindleStatus.nDigitalInputSts;
rSpeedRefValue		:= stSpindleStatus.nSpeedRefSetpoint;
rDCBusVoltage		:= stSpindleStatus.nDCBusVoltage;
rDriveTemp			:= stSpindleStatus.nInternalDriveTemp;
(*
nControlWord		: WORD;
nSpeedRefSetpoint	: INT; 
nRampControlTime    : UINT;
nErrorCode			: BYTE;
nDriveStatus		: BYTE;
nOutputFreq			: INT; 
nMotorCurrent		: UINT;
nMotorTorque        : INT; 
nMotorPower         : UINT;
nDigitalInputSts	: WORD;
nDCBusVoltage		: UINT;
nDrivePowerStageTemp: INT; 
nRelayOutputStatus  : WORD;
nKWHourMeter        : UINT;
nRuntimeHours       : UINT;
nRuntimeMinutes     : UINT;
nInternalDriveTemp  : INT; 
nOutputVoltage      : UINT;
*)]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_WriteParameters" Id="{2cc1a04a-a448-4214-8312-bc9179b7e0fd}">
      <Declaration><![CDATA[METHOD M_WriteParameters : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbModbusMaster.WriteRegs(   
                           UnitID:=,
                           Quantity:=,
                           MBAddr:=,
                           cbLength:=,
                           pMemoryAddr:=,
                           Execute:=,
                           Timeout:=,
                                           );
                                           
fbModbusMaster.WriteSingleRegister(   
                                    UnitID:=,
                                    Quantity:=,
                                    MBAddr:=,
                                    cbLength:=,
                                    pMemoryAddr:=,
                                    Execute:=,
                                    Timeout:=,
                                                    );                                           ]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SpindleFunctions">
      <LineId Id="1283" Count="1" />
      <LineId Id="1315" Count="0" />
      <LineId Id="1520" Count="0" />
      <LineId Id="1512" Count="7" />
      <LineId Id="1526" Count="3" />
      <LineId Id="1065" Count="0" />
      <LineId Id="1542" Count="0" />
    </LineIds>
    <LineIds Name="FB_SpindleFunctions.M_ModbusMapping">
      <LineId Id="52" Count="1" />
      <LineId Id="38" Count="1" />
      <LineId Id="6" Count="2" />
      <LineId Id="43" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="21" Count="6" />
      <LineId Id="18" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="29" Count="1" />
      <LineId Id="35" Count="0" />
      <LineId Id="31" Count="2" />
      <LineId Id="36" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="11" Count="2" />
      <LineId Id="16" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="54" Count="0" />
    </LineIds>
    <LineIds Name="FB_SpindleFunctions.M_ReadParameters">
      <LineId Id="14" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SpindleFunctions.M_SerialLineControl">
      <LineId Id="29" Count="7" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SpindleFunctions.M_SpindleControlMapping">
      <LineId Id="146" Count="1" />
      <LineId Id="76" Count="1" />
      <LineId Id="68" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="70" Count="1" />
      <LineId Id="75" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="62" Count="1" />
      <LineId Id="55" Count="1" />
      <LineId Id="79" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="50" Count="1" />
      <LineId Id="81" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="91" Count="1" />
      <LineId Id="94" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="96" Count="1" />
      <LineId Id="104" Count="2" />
      <LineId Id="95" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="155" Count="13" />
    </LineIds>
    <LineIds Name="FB_SpindleFunctions.M_WriteParameters">
      <LineId Id="6" Count="7" />
      <LineId Id="5" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="19" Count="7" />
      <LineId Id="18" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>