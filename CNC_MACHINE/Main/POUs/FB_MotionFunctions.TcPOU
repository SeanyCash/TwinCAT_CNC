<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_MotionFunctions" Id="{500ca146-bff1-4570-8da1-57ff34083845}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MotionFunctions

VAR_IN_OUT

Ref					: AXIS_REF;
SlaveRef            : AXIS_REF;

END_VAR

VAR_INPUT
	
Motion_In			        : ST_Motion_Inputs;
bHomingInput		        : BOOL;
bPositiveLimitSwitch		: BOOL;
bHomeExecute		        : BOOL;
bGearingEnabled             : BOOL;		

END_VAR

VAR_OUTPUT

Motion_Out			: ST_Motion_Outputs;	

END_VAR
VAR

mcPowerStepper	: MC_PowerStepper;

mcHalt			: MC_Halt;

mcStop			: MC_Stop;

mcHome			: MC_Home;

mcGearIn        : MC_GearIn;

mcGearOut       : MC_GearOut;


END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[M_PowerStepper();
M_Stop();
M_Halt();
M_Home( );
M_Gearing( );
]]></ST>
    </Implementation>
    <Method Name="M_Gearing" Id="{7c95005e-3c30-49b2-be93-35e9b89aab5e}">
      <Declaration><![CDATA[METHOD M_Gearing : BOOL
VAR_INPUT
END_VAR

VAR

END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF bGearingEnabled THEN

mcGearIn(
	Master:= Ref, 
	Slave:= SlaveRef, 
	Execute:= bGearInExecute, 
	RatioNumerator:=1 , 
	RatioDenominator:=1 , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= , 
	Options:= , 
	InGear=> Motion_Out.bGearInDone , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );
    
mcGearOut(
	Slave:= SlaveRef, 
	Execute:= bGearOutExecute, 
	Options:= , 
	Done=> Motion_Out.bGearOutDone, 
	Busy=> , 
	Error=> , 
	ErrorID=> );   

END_IF ]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Halt" Id="{1d5eba30-d25b-44e4-9bd0-eb406bef5b04}">
      <Declaration><![CDATA[METHOD M_Halt : BOOL;]]></Declaration>
      <Implementation>
        <ST><![CDATA[mcHalt(
	Axis:= Ref, 
	Execute:= bHaltExecute, 
	Deceleration:= Motion_In.bHaltDecel, 
	Jerk:= Motion_In.bHaltJerk, 
	BufferMode:= Motion_In.HaltBufferMode, 
	Options:= Motion_In.HaltOptions, 
	Done=> Motion_Out.bHaltDone, 
	Busy=> Motion_Out.bHaltBusy, 
	Active=> Motion_Out.bHaltActive, 
	CommandAborted=> Motion_Out.bHaltAbort, 
	Error=> Motion_Out.bHaltError, 
	ErrorID=> Motion_Out.nHaltErrorID);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Home" Id="{1d749ffd-f5a6-45ff-a0e1-191b93a80305}">
      <Declaration><![CDATA[METHOD M_Home : BOOL
VAR_INPUT

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[mcHome(
	Axis:= Ref, 
	Execute:= bHomeExecute, 
	Position:= 0.00, 
	HomingMode:= ,//MC_DefaultHoming, 
	BufferMode:= , 
	Options:= , 
	bCalibrationCam:= bHomingInput, 
	Done=> Motion_Out.bAxisHomed, 
	Busy=> Motion_Out.bHomeBusy, 
	Active=> Motion_Out.bHomeActive, 
	CommandAborted=> Motion_Out.bHomeAborted, 
	Error=> Motion_Out.bHomeError, 
	ErrorID=> Motion_Out.bHomeErrorID);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PowerStepper" Id="{6a7b06a9-fc89-4287-b1b8-f228a9ca92a7}">
      <Declaration><![CDATA[METHOD M_PowerStepper

VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[mcPowerStepper(
	Axis:= Ref, 
	Enable:= bAxisEnable, 
	Enable_Positive:= NOT bPositiveLimitSwitch,
	Enable_Negative:= TRUE, //NOT bHomingInput, 
	Override:= bOverride, 
	DestallParams:= Motion_In.bDestallParameters, 
	KL_Status:= Motion_In.nKL_Status, 
	KL_Status2:= Motion_In.nKL_Status2, 
	Status=> Motion_Out.bPowerStatus, 
	Error=> Motion_Out.bPowerError, 
	ErrorID=> Motion_Out.nPowerErrorID, 
	Stalled=> Motion_Out.bPowerStalled, 
	StallError=> Motion_Out.bPowerStallError);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Stop" Id="{c1ce39fb-2615-4855-8be7-e49f38ce3586}">
      <Declaration><![CDATA[METHOD M_Stop : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[mcStop(
	Axis:= Ref, 
	Execute:= bStopExecute, 
	Deceleration:= Motion_In.bStopDecel, 
	Jerk:= Motion_In.bStopJerk, 
	Options:= Motion_In.stStopOptions, 
	Done=> Motion_Out.bStopDone, 
	Busy=> Motion_Out.bStopBusy, 
	Active=> Motion_Out.bStopActive, 
	CommandAborted=> Motion_Out.bStopAbort, 
	Error=> Motion_Out.bStopError, 
	ErrorID=> Motion_Out.nStopErrorID);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_MotionFunctions">
      <LineId Id="182" Count="4" />
      <LineId Id="126" Count="0" />
    </LineIds>
    <LineIds Name="FB_MotionFunctions.M_Gearing">
      <LineId Id="35" Count="0" />
      <LineId Id="37" Count="1" />
      <LineId Id="9" Count="15" />
      <LineId Id="5" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="28" Count="6" />
      <LineId Id="26" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="39" Count="0" />
    </LineIds>
    <LineIds Name="FB_MotionFunctions.M_Halt">
      <LineId Id="6" Count="11" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_MotionFunctions.M_Home">
      <LineId Id="6" Count="12" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_MotionFunctions.M_PowerStepper">
      <LineId Id="7" Count="12" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_MotionFunctions.M_Stop">
      <LineId Id="6" Count="10" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>